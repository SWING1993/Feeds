//
//  PrefixHeader.pch
//  Feeds
//
//  Created by 宋国华 on 2018/8/8.
//  Copyright © 2018年 swing. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch
#if DEBUG
// NSLog
#define NSLog(format, ...) printf("TIME:%s FILE:%s(%d行) FUNCTION:%s \n %s\n\n",__TIME__, [[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, __PRETTY_FUNCTION__, [[NSString stringWithFormat:(format), ##__VA_ARGS__] UTF8String])
//app域名
#define kBaseUrl             @"http://localhost:8080"
#define kShouldPrint         YES

#else
// NSLog
#define NSLog(...)
//app域名
#define kBaseUrl             @"http://www.swing1993.cn:8080"
#define kShouldPrint         NO

#endif

//设置 view 圆角和边框
#define HKViewBorderRadius(View, Radius, Width, Color)\
\
[View.layer setCornerRadius:(Radius)];\
[View.layer setMasksToBounds:YES];\
[View.layer setBorderWidth:(Width)];\
[View.layer setBorderColor:[Color CGColor]]

//由角度转换弧度 由弧度转换角度
#define HKDegreesToRadian(x) (M_PI * (x) / 180.0)
#define HKRadianToDegrees(radian) (radian*180.0)/(M_PI)

//获取view的frame
#define kGetViewWidth(view)  view.frame.size.width
#define kGetViewHeight(view) view.frame.size.height
#define kGetViewX(view)      view.frame.origin.x
#define kGetViewY(view)      view.frame.origin.y
//获取图片资源的frame
#define kGetImage(imageName) [UIImage imageNamed:[NSString stringWithFormat:@"%@",imageName]]

//沙盒目录文件
//获取temp
#define kPathTemp NSTemporaryDirectory()
//获取沙盒 Document
#define kPathDocument [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) firstObject]
//获取沙盒 Cache
#define kPathCache [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) firstObject]

//GCD - 一次性执行
#define kDISPATCH_ONCE_BLOCK(onceBlock) static dispatch_once_t onceToken; dispatch_once(&onceToken, onceBlock);
//GCD - 在Main线程上运行
#define kDISPATCH_MAIN_THREAD(mainQueueBlock) dispatch_async(dispatch_get_main_queue(), mainQueueBlock);
//GCD - 开启异步线程
#define kDISPATCH_GLOBAL_QUEUE_DEFAULT(globalQueueBlock) dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), globalQueueBlock);

// alertView
#define kTipAlert(_S_, ...)     [[[UIAlertView alloc] initWithTitle:[NSString stringWithFormat:(_S_), ##__VA_ARGS__] message:nil delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil] show]
//#define kTipAlert(_S_, ...)     [NSObject showHudTipStr:[NSString stringWithFormat:(_S_), ##__VA_ARGS__]]

#define kKeyWindow [UIApplication sharedApplication].keyWindow

#define kShieldDay @"ShieldDayKey"
#define kApplicationMsgHidden @"ApplicationMsgHiddenKey"
#define kTrainTicketMsgHidden @"TrainTicketMsgHiddenKey"
#define kTrainMoreMsgHidden @"TrainMoreMsgHiddenKey"
#define kHotelOrderMsgHidden @"HotelOrderMsgHiddenKey"
#define kPlaneOrderMsgHidden @"PlaneOrderMsgHiddenKey"
#define kShoppingBagsMsgHidden @"ShoppingBagsMsgHiddenKey"
#define kIndexFinancialFlip @"indexFinancialFlipKey"

#define kApplicationSettingPaymentPwd @"ApplicationSettingPaymentPwd"
#define kApplicationForgetPwd @"ApplicationForgetPwd"

#pragma mark - 系统版本  屏幕尺寸
/**
 *  系统版本
 */
#define kDeviceType  [[UIDevice currentDevice] model]
#define kSystemVersion [[UIDevice currentDevice] systemVersion]
#define kDeviceId [HKTools getDeviceIDInKeychain]
#define kVersion [[NSBundle mainBundle] objectForInfoDictionaryKey:@"CFBundleShortVersionString"]
#define kVersionBuild [[NSBundle mainBundle] objectForInfoDictionaryKey:@"CFBundleVersion"]
#define KIdentifier [[NSBundle mainBundle] objectForInfoDictionaryKey:@"CFBundleIdentifier"]

#ifndef ios11x

#endif

#pragma mark - ios系统版本
/**
 *  设备
 */
#define ios11x [kSystemVersion floatValue] >= 11.0f
#define ios10x [kSystemVersion floatValue] >= 10.0f
#define ios9x [kSystemVersion floatValue] >= 9.0f
#define ios8x [kSystemVersion floatValue] >= 8.0f
#define ios7x ([kSystemVersion floatValue] >= 7.0f) && ([kSystemVersion floatValue] < 8.0f)
#define ios6x [kSystemVersion floatValue] < 7.0f
#define kStatusBarHeight [UIApplication sharedApplication].statusBarFrame.size.height
#define kNavigationBarHeight 44
#define kNaviHeigh (kNavigationBarHeight+kStatusBarHeight)
#define kTabBarHeight (kDevice_Is_iPhoneX ? 83.0f : 49.0f)

#pragma mark - 屏幕宽高

#define kScaleFrom_iPhone6_Desgin(_X_) (_X_ * (kScreenW/375))
#define kDevice_Is_iPad [[UIDevice currentDevice].model hasPrefix:@"iPad"]
#define kDevice_Is_iPhone4 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) : NO)
#define kDevice_Is_iPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) : NO)
#define kDevice_Is_iPhone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) : NO)
#define kDevice_Is_iPhone6Plus ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size) : NO)

#define kDevice_Is_iPhoneX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)


#pragma mark - 屏幕frame,bounds,size
#define kScreenFrame [UIScreen mainScreen].bounds
#define kScreenBounds [UIScreen mainScreen].bounds
#define kScale [UIScreen mainScreen].scale
#define kScreenSize [UIScreen mainScreen].bounds.size
#define kScreenW [[UIScreen mainScreen] bounds].size.width
#define kScreenH [[UIScreen mainScreen] bounds].size.height

#define kScreenWidthRatio       (kScreenW < 375 ? kScreenW / 375.0 : 1)
#define kScreenHeightRatio      (kScreenW < 667 ? kScreenH / 667.0 : 1)
#define AdaptedWidth(x)         ceilf((x) * kScreenWidthRatio)
#define AdaptedHeight(x)        ceilf((x) * kScreenHeightRatio)

// 字符串是否为空
#define kStringIsEmpty(str) ([str isKindOfClass:[NSNull class]] || str == nil || [str length] < 1 ? YES : NO )
// 数组是否为空
#define kArrayIsEmpty(array) (array == nil || [array isKindOfClass:[NSNull class]] || array.count == 0)
// 字典是否为空
#define kDictIsEmpty(dic) (dic == nil || [dic isKindOfClass:[NSNull class]] || dic.allKeys == 0)
// 是否是空对象
#define kObjectIsEmpty(_object) (_object == nil \
|| [_object isKindOfClass:[NSNull class]] \
|| ([_object respondsToSelector:@selector(length)] && [(NSData *)_object length] == 0) \
|| ([_object respondsToSelector:@selector(count)] && [(NSArray *)_object count] == 0))

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#import <QMUIKit/QMUIKit.h>
#import <YTKNetwork/YTKNetwork.h>
#import <YTKKeyValueStore/YTKKeyValueStore.h>
#import <BlocksKit/BlocksKit.h>
#import <BlocksKit/BlocksKit+UIKit.h>
#import <ReactiveObjC/ReactiveObjC.h>
#import <TPKeyboardAvoiding/TPKeyboardAvoidingTableView.h>
#import <TPKeyboardAvoiding/TPKeyboardAvoidingScrollView.h>
#import <TPKeyboardAvoiding/TPKeyboardAvoidingCollectionView.h>
#import <TPKeyboardAvoiding/UIScrollView+TPKeyboardAvoidingAdditions.h>
#import <MJExtension/MJExtension.h>
#import <MJRefresh/MJRefresh.h>
#import <SDWebImage/UIImageView+WebCache.h>
#import <Masonry/Masonry.h>

#import "NSDate+Extension.h"
#import "NSString+Common.h"

#import "CMBaseRequest.h"
#import "AppConfigurationTemplate.h"
#import "CMBaseTabBarViewController.h"
#import "CMBaseViewController.h"
#import "CMBaseTableViewController.h"
#import "CMBaseNavigationController.h"
#import "OssService.h"
#endif /* PrefixHeader_pch */
